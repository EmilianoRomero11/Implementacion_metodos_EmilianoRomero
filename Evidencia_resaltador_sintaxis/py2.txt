import csv

def read_file(file_name):
    """Store the contents of the file as a matrix"""
    with open(file_name, newline='') as file:
        reader = csv.reader(file)
        data = list(reader)
    return data

def write_file(file_name, data):
    """Save the contents of a matriz into a file"""
    with open(file_name, 'w', newline='') as file:
        writer = csv.writer(file)
        writer.writerows(data)

def print_matrix(data):
    """Display the contents of a matrix with a nice format"""
    for row in data:
        for item in row:
            print(f"{item:10}", end=' ')
        print()

def make_numeric(data):
    """ Convert the values of the matrix to integers """
    # Convert the values to float
    for row in data[1:]:
        for i in range(1, 8):
            row[i] = float(row[i])

def check_start(current_date, starting_date):
    """This function determines if the date that the user gives is in the data"""
    if current_date == starting_date:
        return True
    else:
        return False

def check_end(current_date, ending_date):
    """This function determines if hte date given by the user is in the data"""
    if current_date == ending_date:
        return True
    else:
        return False


def highs_lows(data, start_index, end_index):
    """This function detirmens the higs and lows in dates given by the dates, and is called when the user chooses option 2"""
    highs = 0
    lows = 10000000
    for row in data[1:]:
        if row[-1] >= start_index and end_index > row[-1]:
            if row[2] > highs:
                highs = row[2]
            if row[3] < lows:
                lows = row[3]
    print(f"The maximum price reached in the given interval is {highs}")
    print(f"The minimum price reached in the given interval is {lows}")

def average(data, start_index, end_index):
    """This function is called when the user chooses option 1 and creates ana verage of stock prices in the dates the user gives"""
    total = 0
    daily_average = 0
    count = 0
    for row in data[1:]:
        if row[-1] >= start_index and end_index > row[-1]:
            daily_average += row[2] / 2 + row[3] / 2
            count += 1
    total = daily_average / count
    print(f"The average price for the given dates is: {total}")

def get_dates(data, choice):
    """This function is called if the user chooses option 1 or 2 and determines the average cost of the stock those dates, or the highs and lows"""
    starting_date = (input("Enter starting date. Ex: 9/18/2017 : "))
    ending_date = (input("Enter ending date. Ex: 11/8/2017 : "))
    current_date = 0
    end_index = False
    start_index = False
    for row in data:
        current_date = row[0]
        start = check_start(current_date, starting_date)
        end = check_end(current_date, ending_date)
        if start == True:
            start_index = row[-1]
        elif end == True:
            end_index = row[-1]
            break
    if start_index == False:
        print("No values for starting date, try again")
        if end_index == False:
            print("No values for ending date, try again")
    elif end_index == False:
        print("No values for ending date, try again")
        if start_index == False:
            print("No values for starting date, try again")
    elif choice == 1:
        average(data, start_index, end_index)
    else:
        highs_lows(data, start_index, end_index)

def recs(data):
    """This funciton is called if the user chooses choice 3, and it determines if it is better to sell or buy depending on the price the user chooses"""
    print("This option will recommend to sell if the price is above the historic average, or to buy if it is below")
    current_price = float(input("Enter the current price as a decimal value: "))
    daily_average = 0
    count = 0
    for row in data[1:]:
        daily_average += row[2] / 2 + row[3] / 2
        count += 1
    total_average = daily_average / count
    if current_price > total_average:
        print("Sell")
    else:
        print("Buy")

def main():
    """This function calls all the functions that are needed depending on th eusers input"""
    file_name = "TSLA.csv"
    data = read_file(file_name)
    make_numeric(data)
    print("Tesla stock data available from dates: 9/19/2017 to 9/16/2022")
    print("Options:")
    choice = 0
    while choice != 4:
        choice = int(input("1. Get average.  2. Get highs and lows.  3. Buy or sell recommendations  4. End  "))
        if choice == 1:
            get_dates(data, choice)
        elif choice == 2:
            get_dates(data, choice)
        elif choice == 3:
            recs(data)
        elif choice == 4:
            print("Goodbye")
        else:
            print("Invalid entry")

main()

